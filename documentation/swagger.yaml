# this is the 1ClickTrips API documentation
swagger: '2.0'
info:
  title: 1ClickTrips API
  description: Business travel at its best
  version: "1.0.0"
# the domain of the service
host: 1clicktrips.com
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api
produces:
  - application/json
paths:
  #########################################################################
  # Authentication API
  #########################################################################
  /auth/register:
    post:
      summary: User Signup
      description: |
        The user signup takes a username and a password as post arguments
        and returns an auth token with its expiration date.
      tags:
        - Auth
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: string
        - name: password
          in: body
          required: true
          schema:
            type: string
      responses:
        200:
          description: Authentication token for a user
          schema:
            $ref: '#/definitions/Authentication'
        401:
          description: Authentication failure
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /auth/local:
    post:
      summary: User Signin
      description: |
        The user signin takes a username and a password as post arguments
        and returns an auth token.
      tags:
        - Auth
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: string
        - name: password
          in: body
          required: true
          schema:
            type: string
      responses:
        200:
          description: Authentication token for a user
          schema:
            $ref: '#/definitions/Authentication'
        401:
          description: Authentication failure
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /auth/twitter:
    get: 
      summary: Twitter Signin
      description: |
        The Twitter authentication will be done with Twitter oauth2.
      tags:
        - Auth
      responses:
        200:
          description: Twitter signin successful
          schema:
            $ref: '#/definitions/Authentication'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
#  /auth/connect/twitter:
#    get:
#      summary: Twitter Auth
#      description: |
#        Connect the Twitter account to the local account.
#      tags:
#        - Auth
#      responses: 
#        200:
#          description: Twitter connect successful
#          schema:
#            $ref: '#/definitions/Authentication'
#        default:
#          description: Unexpected error
#          schema:
#            $ref: '#/definitions/Error'
        
  /auth/unlink/twitter:
    get:
      summary: Unlink Twitter Accout
      description: |
        The Twitter account can be unlinked from the local account. 
      tags:
        - Auth
      responses:
        200:
          description: Twitter unlink successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /auth/logout:
    get:
      summary: Log out 
      description: |
        Log out the user and delete the cookie from the server.
      tags: 
        - Auth
        - User
      responses:
        200:
          description: Logout successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  #/auth/google:
  #/auth/unlink/google:
    
  #/auth/facebook:
  #/auth/unlink/facebook:
            
  #########################################################################
  # User Account API
  #########################################################################
  /account/profile:
    get:
      summary: User Profile
      description: |
        The User Profile endpoint returns information about the 1clicktrips
        user that has authenticated with the application.
      tags:
        - User
        - Settings
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post: 
      summary: Update User Profile
      description: |
        The User Profile can be only updated collectively.
      tags:
        - User
        - Settings
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: '#/definitions/Profile'
      responses:
        200:
          description: Update of Profile successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /account/settings:
    get:
      summary: User Settings
      description: |
        The Settings endpoint returns information on the user settings of 
        the currently authenticated user. 
      tags:
        - Settings
        - User
      parameters:
        - name: category
          in: query
          type: string
          description: |
            Settings category to retrieve.
      responses:
        200:
          description: An array of settings
          schema:
            type: array
            items:
              $ref: '#/definitions/Setting'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post: 
      summary: Update User Settings
      description: |
        User settings can be updated one at a time. It must be assured, that
        all information are supplied to be able to create a new setting or 
        update an existing one.
      tags:
        - Settings
        - User
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: '#/definitions/Setting'
      responses:
        200:
          description: Update of setting successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    
  /account/favorites:
    get:
      summary: Get User Favorites
      description: |
        The User Favorites endpoint returns data about a user's favorites 
        that he saved before.
      tags:
        - User
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          description: |
            Number of items to retrieve. Default is 5, maximum is 100.
      responses:
        200:
          description: Array of favorites for the given user
          schema:
            type: array
            items:
              $ref: '#/definitions/Favorite'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post: 
      summary: Update Favorites
      description: |
        Save a new favorite or edit an existing one. 
      tags:
        - User
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: '#/definitions/Favorite'
      responses:
        200:
          description: Creation/Update of favorites successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /account/bookings:
    get:
      summary: Booking History
      description: |
        The Bookings endpoint returns data about a user's lifetime 
        activity with 1clicktrips.
      tags:
        - User
      parameters:
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
          description: |
            The offset is given as seconds since the UNIX epoche. Only 
            look for trips that have been booked after this date. Default
            is zero.
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
          description: |
            Number of items to retrieve. Default is 5, maximum is 30.
      responses:
        200:
          description: Booking history for the given user
          schema:
            type: array
            items:
              $ref: '#/definitions/Booking'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post: 
      summary: Add Booking
      description: Create a new booking. 
      tags:
        - User
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: '#/definitions/Booking'
      responses:
        200:
          description: Creation of booking successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /account/messages:
    get:
      summary: Get Messages for the user
      description: |
        The Messages endpoint returns data that is supposed to
        be presented to the user in the frontend.
      tags:
        - User
      responses:
        200:
          description: Array of messages for the given user
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  #########################################################################
  # Search API
  #########################################################################
  /search/events:
    get:
      summary: Event List
      description: |
        The events endpoint will deliver a list of events to the client
        that match with the given query criteria.
      tags:
        - Search
      parameters:
        - name: qs
          in: query
          description: The search string to filter the events
          required: true
          type: string
        - name: start_date
          in: query
          description: The start date of the trip to be planned
          required: false
          type: string
        - name: end_date
          in: query
          description: The end date of the trip to be planned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of events to return
          required: false
          type: integer
          format: int32
      responses:
          200:
            description: An array of events
            schema:
              type: array
              items:
                $ref: '#/definitions/Event'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'  
    
  /search/spaces:
    get:
      summary: Meeting Spaces List
      description: |
        The spaces endpoint will deliver a list of meeting spaces
        to the client that match with the given query criteria.
      tags:
        - Search
      parameters:
        - name: qs
          in: query
          description: The search string to filter the meeting spaces
          required: true
          type: string
        - name: start_date
          in: query
          description: The start date of the trip to be planned
          required: false
          type: string
        - name: end_date
          in: query
          description: The end date of the trip to be planned
          required: false
          type: string
        - name: limit
          in: query
          description: The maximum number of meeting spaces to return
          required: false
          type: integer
          format: int32
      responses:
          200:
            description: An array of meeting spaces
            schema:
              type: array
              items:
                $ref: '#/definitions/MeetingSpace'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'  

  /search/trips:
    post:
      summary: Trip Results
      description: | 
        The Trips endpoint returns a collection of trips that matches with 
        the given parameters. 
      tags:
        - Search
      parameters:
        - name: origin
          in: body
          description: Origin location
          required: true
          schema:
            type: object
            $ref: '#/definitions/Location'
        - name: originDescription
          in: body
          description: Description of the origin location
          required: false
          schema:
            type: string
        - name: appointments
          in: body
          description: Array of appointments
          required: true
          schema:
            type: array
            items: 
              $ref: '#/definitions/Appointment'
        - name: roundTrip
          in: body
          description: Roundtrip option
          required: true
          schema: 
            type: integer
            format: int16
            description: | 
              This should be boolean, but Swagger UI is not 
              able to render it proberly.
        - name: currency
          in: body
          description: Active currency
          required: true
          schema: 
            type: string
        - name: locale
          in: body
          description: Active locale
          required: true
          schema: 
            type: string
        - name: numberOfTravelers
          in: body
          required: false
          schema: 
            type: integer
            format: int16
        - name: numberOfChildren
          in: body
          required: false
          schema: 
            type: integer
            format: int16
        - name: preferences
          in: body
          description: |
            A preference set that will be used for finding a 
            proper custom trip.
          required: false
          schema: 
            type: array
            items:
              $ref: '#/definitions/Setting'
      responses:
        200:
          description: An array of trips
          schema:
            type: array
            items:
              $ref: '#/definitions/Itinerary'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /search/alternatives:
    get:
      summary: Trip Alternatives
      description: | 
        The Alternatives endpoint returns a collection of alternatives 
        for a given trip segment. 
      tags:
        - Search
      parameters:
        - name: tripId
          in: query
          description: The trip ID of the requested trip
          required: true
          type: string
        - name: segmentId
          in: query
          description: The segment ID of the segment to be replaced
          required: true
          type: string
        - name: limit
          in: query
          description: The maximum number of alternatives
          required: false
          type: integer
          format: int32
      responses:
          200:
            description: An array of alternatives
            schema:
              type: array
              items:
                $ref: '#/definitions/Segment' # TODO create proper format
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'          
              
  #########################################################################
  # Language API
  #########################################################################
  /locales:
    get:
      summary: Language File
      description: | 
        The language file for a given language code.
      tags:
        - Language
        - Localization
      responses:
        200:
          description: A JSON array with the available languages
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /locales/{languageCode}:
    get:
      summary: Language File
      description: | 
        The language file for a given language code.
      tags:
        - Language
        - Localization
      parameters:
        - name: languageCode
          in: path
          required: true
          type: string
          description: ISO 639-1 Language Codes
      responses:
        200:
          description: A JSON object with the translations
          schema:
            type: object
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  #########################################################################
  # Currency API
  #########################################################################
  /currencies:
    get:
      summary: List of Currencies
      description: | 
        The list of available currencies.
      tags:
        - Language
        - Localization
      responses:
        200:
          description: A JSON array with the available currencies
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
#########################################################################
# API Data Definitions
#########################################################################
definitions:
  Authentication:
    required:
      - token
      - expires
    properties:
      token:
        type: string
        description: Authentication token
      expires:
        type: integer
        format: int32
        description: Expiration date of the auth token
  Language:
    properties:
      code: 
        type: string
        description: ISO 639-1 Language Code (e.g. en-US)
      name: 
        type: string
        description: The name of the language (e.g. English)
  Currency:
    properties:
      code:
        type: string
        description: EUR
      symbol: 
        type: string
        description: €
      thousandsSeparator: 
        type: string
      decimalSeparator: 
        type: integer
        format: int16
      symbolOnLeft: 
        type: boolean
      spaceBetweenAmountAndSymbol: 
        type: boolean
      roundingCoefficient: 
        type: integer
        format: int16
      decimalDigits: 
        type: integer
        format: int16
  Setting:
    properties:
      category: 
        type: string
        description: The category of the key-value pair
      key: 
        type: string
        description: The settings key (e.g. early bird)
      value:
        type: string
        description: The settings value (e.g. true)
      description: 
        type: string
        description: The description for the key-value pair
  Itinerary:
    properties:
      id: 
        type: string
      outbound:
        $ref: '#/definitions/Trip'
      inbound:
        $ref: '#/definitions/Trip'
      price:
        type: number
        format: double
      currency:
        type: string
        description: The ISO 4217 currency code
      type: 
        type: integer
        format: int32
        description: |
          Defines the trip result type
            0 = budget
            1 = time
            2 = comfort
  Trip:
    properties:
      id:
        type: string
      origin: 
        $ref: '#/definitions/Location'
      destination:
        $ref: '#/definitions/Location'
      departureTime: 
        type: string
        description: '2014-11-12T19:05:00'
      arrivalTime: 
        type: string
        description: '2014-11-12T19:05:00'
      distance: 
        type: number
        format: double
      duration:
        type: integer
        format: int32
      segments:
        type: array
        items: 
          $ref: '#/definitions/Segment'
  Location:
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  Segment: 
    properties:
      id:
        type: string
      origin: 
        $ref: '#/definitions/Location'
      destination:
        $ref: '#/definitions/Location'
      departureTime: 
        type: string
        description: '2014-11-12T19:05:00'
      arrivalTime: 
        type: string
        description: '2014-11-12T19:05:00'
      duration:
        type: number
        format: int32
        description: Duration in minutes
      type:
        type: number
        format: int32
        description: | 
          Travel option used. 
          Stay = 0, Walk = 1, Taxi = 2, Car = 4, 
          Bus = 8, Train = 16, Plane = 32
      price:
        type: number
        format: double
      currency:
        type: string
        description: The ISO 4217 currency code
  Profile:
    required:
      - email
    properties:
      first-name:
        type: string
        description: First name of the user
      last-name:
        type: string
        description: Last name of the user
      email:
        type: string
        description: Email address of the user
      address:
        $ref: '#/definitions/Address'
      image:
        type: string
        description: Image URL of the user
      promo-code:
        type: string
        description: Promo code of the user
  Address:
    properties:
      street: 
        type: string
      zip:
        type: integer
        format: int32
      city: 
        type: string
      country:
        type: string
  Favorite:
    required: 
      - start
      - end
    properties:
      id:
        type: string
        description: Unique identifier for the favorite
      start:
        type: string
        description: |  
          The start location of the booking. Can be an address
          or a description (e.g. home)
      end:
        type: string
        description: |  
          The end location of the booking. Can be an address
          or a description (e.g. company name)
      transport:
        type: array
        items:
          type: number
          format: int32
          description: |
            Travel option used. 
            Walk = 1, Taxi = 2, Car = 4, Bus = 8, 
            Train = 16, Plane = 32
  Booking:
    required:
      - id
      - title
      - destination
      - startDate
      - endDate
      - participants
    properties:
      id:
        type: string
        description: Unique identifier for the booking
      title:
        type: string
        description: A speaking title for the booking
      destination:
        type: string
        description: |  
          The destination location of the booking. Can be an address
          or a description (e.g. company name)
      tags:
        type: array
        items:
          type: string
          description: Tags that can be used to identify the trip.
      startDate:
        type: string
        description: '2015-02-09T02:54:51+00:0'
      endDate:
        type: string
        description: '2015-02-09T02:54:51+00:0'
      reference:
        type: string
        description: | 
          A url to any sort of information for that trip. Could
          be a link to the event or the host company.
      hotel:
        type: object
        $ref: '#/definitions/Hotel'
      participants:
        type: array
        items: 
          type: object
          $ref: '#/definitions/Participant'
  Hotel:
    required:
      - name
    properties:
      name:
        type: string
      checkIn:
        type: string
      url:
        type: string
        decription: Link to the hotel website
      image:
        type: string
        decription: Link to the hotel image
  Participant:
    required:
      - email
      - booked
      - image
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      booked:
        type: boolean
      arrivalTime:
        type: string
        description: '2015-02-09T02:54:51+00:0'
      image:
        type: string
        description: Image url for the participant
      profile:
        type: string
        description: Link to a user profile.
  Event:
    required:
      - id
      - title
      - location
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      location:
        type: object
        $ref: '#/definitions/Location'
      tags:
        type: array
        items:
          type: string
      dates:
        type: array
        items: 
           $ref: '#/definitions/Timing'
      open:
        type: boolean
        description: |
          Indicates if the event is open, when the user planned 
          the according trip.
      url:
        type: string
      image:
        type: string
        description: Image url of the event
  Timing:
    properties:
      start:
        type: string
        description: |
          ISO 8601 time and date
          "2015-02-09T02:54:51+00:0"
      end:
        type: string
        description: |
          ISO 8601 time and date
          "2015-02-09T02:54:51+00:0"
  Appointment:
    required:
      - location
      - start
      - end
    properties:
      location:
        type: object
        $ref: '#/definitions/Location'
      start:
        type: string
        description: "2015-02-09T02:54:51"
      end:
        type: string
        description: "2015-02-09T02:54:51"
      description:
        type: string
  MeetingSpace:
    required: 
      - title
      - location
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      location:
        type: object
        $ref: '#/definitions/Location'
      seatsAvailable:
        type: integer
        format: int32
      catering:
        type: boolean
  Message:
    properties:
      id:
        type: string
      content:
        type: string
      date:
        type: string
        description: "2015-02-10T02:54:51+00:0"
      url:
        type: string
      type:
        type: string
        description: |
          Can be used to store any type of information that 
          then can be used to show an icon in the frontend.
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
